# ========================================
# DATABASE CONFIGURATION
# ========================================

# Database Type: 'sqlite' or 'mssql'
DB_TYPE=mssql

# ========================================
# SQLITE CONFIGURATION
# ========================================
# For local development with SQLite
SQLITE_DB_PATH=./sampling.db

# ========================================
# MS SQL SERVER CONFIGURATION
# ========================================

# Server Configuration
MSSQL_SERVER=localhost              # Server address (use 'server,port' for non-standard ports)
MSSQL_PORT=1433                     # Port (default: 1433)
MSSQL_DATABASE=SamplingDB           # Database name

# Authentication Method
# Options: 'sql' (SQL Authentication) or 'windows' (Windows Authentication)
MSSQL_AUTH_METHOD=sql

# SQL Authentication Credentials (ignored if using Windows auth)
MSSQL_USERNAME=sa
MSSQL_PASSWORD=YourStrong@Passw0rd

# ========================================
# ENCRYPTION SETTINGS
# ========================================

# Enable Encryption (recommended for production)
# Options: true or false
MSSQL_ENCRYPT=true

# Trust Server Certificate
# true: Accept self-signed certificates (development/testing)
# false: Validate certificate chain (production)
MSSQL_TRUST_CERT=true

# Connection Timeout (seconds)
MSSQL_TIMEOUT=30

# ========================================
# ODBC DRIVER CONFIGURATION
# ========================================

# ODBC Driver to use
# Common options:
# - "ODBC Driver 18 for SQL Server" (latest, mandatory encryption by default)
# - "ODBC Driver 17 for SQL Server" (recommended, good compatibility)
# - "SQL Server" (legacy, limited encryption support)
MSSQL_DRIVER=ODBC Driver 17 for SQL Server

# ========================================
# PRODUCTION DWH CONFIGURATION (Example)
# ========================================
# Uncomment and modify for production data warehouse

# MSSQL_SERVER=dwh-server.yourcompany.com
# MSSQL_DATABASE=DataWarehouse
# MSSQL_AUTH_METHOD=windows
# MSSQL_ENCRYPT=true
# MSSQL_TRUST_CERT=false            # Use valid certificates in production
# MSSQL_DRIVER=ODBC Driver 17 for SQL Server

# ========================================
# APPLICATION SETTINGS
# ========================================

# Default download path for exports
COPY_PATH=C:\Users\YourUser\Downloads

# ========================================
# DOCKER DEVELOPMENT SETTINGS
# ========================================
# These are used by docker-compose.yml

# SQL Server Docker Image Settings
ACCEPT_EULA=Y                       # Required for MS SQL Server Docker
SA_PASSWORD=YourStrong@Passw0rd    # SA password for Docker SQL Server
MSSQL_PID=Developer                 # SQL Server edition (Developer is free for dev/test)

# ========================================
# SECURITY NOTES
# ========================================
# 1. Never commit .env files with real credentials to version control
# 2. Use strong passwords in production
# 3. Enable encryption for all production connections
# 4. Use certificate validation in production (MSSQL_TRUST_CERT=false)
# 5. Use Windows Authentication when possible for domain environments
# 6. Regularly rotate passwords and update ODBC drivers

# ========================================
# QUICK START CONFIGURATIONS
# ========================================

# For Local Docker Development:
# - DB_TYPE=mssql
# - MSSQL_SERVER=localhost
# - MSSQL_AUTH_METHOD=sql
# - MSSQL_ENCRYPT=true
# - MSSQL_TRUST_CERT=true

# For Production DWH with Windows Auth:
# - DB_TYPE=mssql
# - MSSQL_SERVER=your-dwh-server
# - MSSQL_AUTH_METHOD=windows
# - MSSQL_ENCRYPT=true
# - MSSQL_TRUST_CERT=false

# For SQLite Development:
# - DB_TYPE=sqlite
# - (MS SQL settings will be ignored)